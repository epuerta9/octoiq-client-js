/*
 * OpenAPI
 * OpenAPI
 *
 * OpenAPI spec version: 0.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 3.0.52
 *
 * Do not edit the class manually.
 *
 */
import {ApiClient} from './ApiClient';
import {AuthLogin} from './model/AuthLogin';
import {AuthLoginResponse} from './model/AuthLoginResponse';
import {AuthWhoAmIResponse} from './model/AuthWhoAmIResponse';
import {Gpt} from './model/Gpt';
import {GptCreate} from './model/GptCreate';
import {GptCreateData} from './model/GptCreateData';
import {Kb} from './model/Kb';
import {KbCreate} from './model/KbCreate';
import {KbUpdate} from './model/KbUpdate';
import {Org} from './model/Org';
import {OrgCreateQuestionnaire} from './model/OrgCreateQuestionnaire';
import {OrgPlan} from './model/OrgPlan';
import {OrgQuestionnaire} from './model/OrgQuestionnaire';
import {OrgTag} from './model/OrgTag';
import {OrgTagInner} from './model/OrgTagInner';
import {OrgTeam} from './model/OrgTeam';
import {OrgTeamInner} from './model/OrgTeamInner';
import {OrgUpdate} from './model/OrgUpdate';
import {OrgUpdateQuestionnaire} from './model/OrgUpdateQuestionnaire';
import {OrgUser} from './model/OrgUser';
import {OrgUserCreate} from './model/OrgUserCreate';
import {OrgUserInner} from './model/OrgUserInner';
import {Room} from './model/Room';
import {Tag} from './model/Tag';
import {TagCreate} from './model/TagCreate';
import {TagManyCreate} from './model/TagManyCreate';
import {TagManyResponse} from './model/TagManyResponse';
import {TagUpdate} from './model/TagUpdate';
import {Team} from './model/Team';
import {TeamCreate} from './model/TeamCreate';
import {TeamKB} from './model/TeamKB';
import {TeamQuestion} from './model/TeamQuestion';
import {TeamQuestionInner} from './model/TeamQuestionInner';
import {TeamTag} from './model/TeamTag';
import {TeamUpdate} from './model/TeamUpdate';
import {TeamUser} from './model/TeamUser';
import {TeamUserInner} from './model/TeamUserInner';
import {UnknownInterface} from './model/UnknownInterface';
import {User} from './model/User';
import {AuthAPIApi} from './api/AuthAPIApi';
import {AuthLoginResponseApi} from './api/AuthLoginResponseApi';
import {AuthWhoAmIResponseApi} from './api/AuthWhoAmIResponseApi';
import {GPTAPIApi} from './api/GPTAPIApi';
import {GptApi} from './api/GptApi';
import {KbApi} from './api/KbApi';
import {KnowledgeBaseAPIApi} from './api/KnowledgeBaseAPIApi';
import {OrgApi} from './api/OrgApi';
import {OrgAPIApi} from './api/OrgAPIApi';
import {OrgPlanApi} from './api/OrgPlanApi';
import {OrgQuestionnaireApi} from './api/OrgQuestionnaireApi';
import {OrgTagApi} from './api/OrgTagApi';
import {OrgTeamApi} from './api/OrgTeamApi';
import {OrgUserApi} from './api/OrgUserApi';
import {RoomApi} from './api/RoomApi';
import {RootApi} from './api/RootApi';
import {TagApi} from './api/TagApi';
import {TagAPIApi} from './api/TagAPIApi';
import {TagManyResponseApi} from './api/TagManyResponseApi';
import {TeamApi} from './api/TeamApi';
import {TeamAPIApi} from './api/TeamAPIApi';
import {TeamKBApi} from './api/TeamKBApi';
import {TeamQuestionApi} from './api/TeamQuestionApi';
import {TeamTagApi} from './api/TeamTagApi';
import {TeamUserApi} from './api/TeamUserApi';
import {UIApi} from './api/UIApi';
import {UserApi} from './api/UserApi';
import {UserAPIApi} from './api/UserAPIApi';

/**
* OpenAPI.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var OpenApi = require('index'); // See note below*.
* var xxxSvc = new OpenApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new OpenApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new OpenApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new OpenApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthLogin model constructor.
     * @property {module:model/AuthLogin}
     */
    AuthLogin,

    /**
     * The AuthLoginResponse model constructor.
     * @property {module:model/AuthLoginResponse}
     */
    AuthLoginResponse,

    /**
     * The AuthWhoAmIResponse model constructor.
     * @property {module:model/AuthWhoAmIResponse}
     */
    AuthWhoAmIResponse,

    /**
     * The Gpt model constructor.
     * @property {module:model/Gpt}
     */
    Gpt,

    /**
     * The GptCreate model constructor.
     * @property {module:model/GptCreate}
     */
    GptCreate,

    /**
     * The GptCreateData model constructor.
     * @property {module:model/GptCreateData}
     */
    GptCreateData,

    /**
     * The Kb model constructor.
     * @property {module:model/Kb}
     */
    Kb,

    /**
     * The KbCreate model constructor.
     * @property {module:model/KbCreate}
     */
    KbCreate,

    /**
     * The KbUpdate model constructor.
     * @property {module:model/KbUpdate}
     */
    KbUpdate,

    /**
     * The Org model constructor.
     * @property {module:model/Org}
     */
    Org,

    /**
     * The OrgCreateQuestionnaire model constructor.
     * @property {module:model/OrgCreateQuestionnaire}
     */
    OrgCreateQuestionnaire,

    /**
     * The OrgPlan model constructor.
     * @property {module:model/OrgPlan}
     */
    OrgPlan,

    /**
     * The OrgQuestionnaire model constructor.
     * @property {module:model/OrgQuestionnaire}
     */
    OrgQuestionnaire,

    /**
     * The OrgTag model constructor.
     * @property {module:model/OrgTag}
     */
    OrgTag,

    /**
     * The OrgTagInner model constructor.
     * @property {module:model/OrgTagInner}
     */
    OrgTagInner,

    /**
     * The OrgTeam model constructor.
     * @property {module:model/OrgTeam}
     */
    OrgTeam,

    /**
     * The OrgTeamInner model constructor.
     * @property {module:model/OrgTeamInner}
     */
    OrgTeamInner,

    /**
     * The OrgUpdate model constructor.
     * @property {module:model/OrgUpdate}
     */
    OrgUpdate,

    /**
     * The OrgUpdateQuestionnaire model constructor.
     * @property {module:model/OrgUpdateQuestionnaire}
     */
    OrgUpdateQuestionnaire,

    /**
     * The OrgUser model constructor.
     * @property {module:model/OrgUser}
     */
    OrgUser,

    /**
     * The OrgUserCreate model constructor.
     * @property {module:model/OrgUserCreate}
     */
    OrgUserCreate,

    /**
     * The OrgUserInner model constructor.
     * @property {module:model/OrgUserInner}
     */
    OrgUserInner,

    /**
     * The Room model constructor.
     * @property {module:model/Room}
     */
    Room,

    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag,

    /**
     * The TagCreate model constructor.
     * @property {module:model/TagCreate}
     */
    TagCreate,

    /**
     * The TagManyCreate model constructor.
     * @property {module:model/TagManyCreate}
     */
    TagManyCreate,

    /**
     * The TagManyResponse model constructor.
     * @property {module:model/TagManyResponse}
     */
    TagManyResponse,

    /**
     * The TagUpdate model constructor.
     * @property {module:model/TagUpdate}
     */
    TagUpdate,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The TeamCreate model constructor.
     * @property {module:model/TeamCreate}
     */
    TeamCreate,

    /**
     * The TeamKB model constructor.
     * @property {module:model/TeamKB}
     */
    TeamKB,

    /**
     * The TeamQuestion model constructor.
     * @property {module:model/TeamQuestion}
     */
    TeamQuestion,

    /**
     * The TeamQuestionInner model constructor.
     * @property {module:model/TeamQuestionInner}
     */
    TeamQuestionInner,

    /**
     * The TeamTag model constructor.
     * @property {module:model/TeamTag}
     */
    TeamTag,

    /**
     * The TeamUpdate model constructor.
     * @property {module:model/TeamUpdate}
     */
    TeamUpdate,

    /**
     * The TeamUser model constructor.
     * @property {module:model/TeamUser}
     */
    TeamUser,

    /**
     * The TeamUserInner model constructor.
     * @property {module:model/TeamUserInner}
     */
    TeamUserInner,

    /**
     * The UnknownInterface model constructor.
     * @property {module:model/UnknownInterface}
     */
    UnknownInterface,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
    * The AuthAPIApi service constructor.
    * @property {module:api/AuthAPIApi}
    */
    AuthAPIApi,

    /**
    * The AuthLoginResponseApi service constructor.
    * @property {module:api/AuthLoginResponseApi}
    */
    AuthLoginResponseApi,

    /**
    * The AuthWhoAmIResponseApi service constructor.
    * @property {module:api/AuthWhoAmIResponseApi}
    */
    AuthWhoAmIResponseApi,

    /**
    * The GPTAPIApi service constructor.
    * @property {module:api/GPTAPIApi}
    */
    GPTAPIApi,

    /**
    * The GptApi service constructor.
    * @property {module:api/GptApi}
    */
    GptApi,

    /**
    * The KbApi service constructor.
    * @property {module:api/KbApi}
    */
    KbApi,

    /**
    * The KnowledgeBaseAPIApi service constructor.
    * @property {module:api/KnowledgeBaseAPIApi}
    */
    KnowledgeBaseAPIApi,

    /**
    * The OrgApi service constructor.
    * @property {module:api/OrgApi}
    */
    OrgApi,

    /**
    * The OrgAPIApi service constructor.
    * @property {module:api/OrgAPIApi}
    */
    OrgAPIApi,

    /**
    * The OrgPlanApi service constructor.
    * @property {module:api/OrgPlanApi}
    */
    OrgPlanApi,

    /**
    * The OrgQuestionnaireApi service constructor.
    * @property {module:api/OrgQuestionnaireApi}
    */
    OrgQuestionnaireApi,

    /**
    * The OrgTagApi service constructor.
    * @property {module:api/OrgTagApi}
    */
    OrgTagApi,

    /**
    * The OrgTeamApi service constructor.
    * @property {module:api/OrgTeamApi}
    */
    OrgTeamApi,

    /**
    * The OrgUserApi service constructor.
    * @property {module:api/OrgUserApi}
    */
    OrgUserApi,

    /**
    * The RoomApi service constructor.
    * @property {module:api/RoomApi}
    */
    RoomApi,

    /**
    * The RootApi service constructor.
    * @property {module:api/RootApi}
    */
    RootApi,

    /**
    * The TagApi service constructor.
    * @property {module:api/TagApi}
    */
    TagApi,

    /**
    * The TagAPIApi service constructor.
    * @property {module:api/TagAPIApi}
    */
    TagAPIApi,

    /**
    * The TagManyResponseApi service constructor.
    * @property {module:api/TagManyResponseApi}
    */
    TagManyResponseApi,

    /**
    * The TeamApi service constructor.
    * @property {module:api/TeamApi}
    */
    TeamApi,

    /**
    * The TeamAPIApi service constructor.
    * @property {module:api/TeamAPIApi}
    */
    TeamAPIApi,

    /**
    * The TeamKBApi service constructor.
    * @property {module:api/TeamKBApi}
    */
    TeamKBApi,

    /**
    * The TeamQuestionApi service constructor.
    * @property {module:api/TeamQuestionApi}
    */
    TeamQuestionApi,

    /**
    * The TeamTagApi service constructor.
    * @property {module:api/TeamTagApi}
    */
    TeamTagApi,

    /**
    * The TeamUserApi service constructor.
    * @property {module:api/TeamUserApi}
    */
    TeamUserApi,

    /**
    * The UIApi service constructor.
    * @property {module:api/UIApi}
    */
    UIApi,

    /**
    * The UserApi service constructor.
    * @property {module:api/UserApi}
    */
    UserApi,

    /**
    * The UserAPIApi service constructor.
    * @property {module:api/UserAPIApi}
    */
    UserAPIApi
};
